---
- name: EFA | Download and unarchive EFA installation files.
  unarchive:
    src: "https://s3.us-west-2.amazonaws.com/aws-efa-installer/aws-efa-installer-{{ EFA_INSTALLER_VERSION }}.tar.gz"
    dest: /tmp
    remote_src: yes
  tags:
    - efa

- name: EFA | Install EFA software
  command:
    chdir: "/tmp/aws-efa-installer/"
    cmd: "/bin/bash efa_installer.sh -y --minimal --no-verify"
  tags:
    - efa

- name: EFA | Download and unarchive libfabric installation files
  unarchive:
    src: "https://github.com/ofiwg/libfabric/releases/download/v{{ LIBFABRIC_VERSION }}/libfabric-{{ LIBFABRIC_VERSION }}.tar.bz2"
    dest: /tmp
    remote_src: yes
  tags:
    - efa

- name: EFA | Install rdma-core
  dnf:
    name: rdma-core
    state: installed
  tags:
    - efa

- name: EFA | Build libfabric
  command:
    chdir: "/tmp/libfabric-{{ LIBFABRIC_VERSION }}/"
    cmd: "/bin/bash -c './configure --prefix=/opt/libfabric --disable-sockets && make -j 8 && sudo make install'"

- name: EFA | Disable vendored libfabric in bashrc/bash_profile
  lineinfile:
    path: "/home/{{ CLUSTER_USER }}/{{ item }}"
    line: export I_MPI_OFI_LIBRARY_INTERNAL=0
  with_items:
    - .bashrc
    - .bash_profile
  tags:
    - efa

- name: EFA | Set LD_LIBRARY_PATH to /opt/libfabric/lib
  lineinfile:
    path: "/home/{{ CLUSTER_USER }}/{{ item }}"
    line: export LD_LIBRARY_PATH=/opt/libfabric/lib:$LD_LIBRARY_PATH
  with_items:
    - .bashrc
    - .bash_profile
  tags:
    - efa
