
# Azure Pipeline that is triggered weekdays at midnight or when a release is tagged.

trigger:
- refs/tags/*

pr: none

schedules:
- cron: "0 5 * * MON-FRI"
  displayName: 'Weekdays Daily midnight build'
  branches:
    include:
    - develop

parameters:
  - name: BUILD_MAC_CONDA
    type: boolean
    default: false
  - name: BUILD_PIP
    type: boolean
    default: false

# NOTE: these variables determine artifactory channel to publish Bodo/BodoSQL/Iceberg packages.
# See get_channel.sh
# Originally added through Azure Pipeline UI.
# Azure pipeline UI includes AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY
variables:
  CHECK_LICENSE_EXPIRED: 1
  CHECK_LICENSE_CORE_COUNT: 1
  OBFUSCATE: 1

stages:
- stage: Build_Bodo_Binary_Linux_Conda
  displayName: 'Build Bodo Binary for Linux Conda'
  jobs:
  - job: find_suffix
    pool:
      vmImage: ubuntu-latest
    steps:
    - script: |
        set -exo pipefail
        export BUILD_DATE=`date  +"%Y-%m-%d"`
        export FILE_SUFFIX=built-${BUILD_DATE}
        echo "##vso[task.setvariable variable=fileSuffix;isOutput=true]$FILE_SUFFIX"
      displayName: 'write FILE_SUFFIX'
      name: suffix_step
  - template: buildscripts/azure/azure-build-binary-linux-macos.yml
    parameters:
      name: Linux
      vmImage: ubuntu-latest
      platformBuild: false
      weeklyTest: false

# Additional Conda Packages. Usually disabled for Nightly Runs
# But useful to have when testing all Conda Builds
- stage: Build_Bodo_Binary_Other_Conda
  displayName: 'Build Bodo Binary for Other Conda'
  dependsOn: []
  condition: or(eq('${{ parameters.BUILD_MAC_CONDA }}', 'true'), in(variables['Build.Reason'], 'IndividualCI', 'BatchedCI'))
  jobs:
  - template: buildscripts/azure/azure-build-binary-linux-macos.yml
    parameters:
      name: macOS
      vmImage: macOS-latest
      platformBuild: false
      weeklyTest: false
#  - template: buildscripts/azure/azure-build-binary-windows.yml
#    parameters:
#      name: Windows
#      vmImage: windows-2019
  - template: buildscripts/azure/azure-build-binary-linux-macos.yml
    parameters:
      name: macOS_ARM
      vmImage: macOS-latest
      platformBuild: false
      weeklyTest: false
      buildARM: true

# Pip Packages. Usually disabled for Nightly Runs
# But useful to have when testing all Pip Builds
# - stage: Build_Bodo_Binary_Pip
#   displayName: 'Build Bodo Binary for Pip'
#   dependsOn: []
#   condition: or(eq('${{ parameters.BUILD_PIP }}', 'true'), in(variables['Build.Reason'], 'IndividualCI', 'BatchedCI'))
#   jobs:
#   - template: buildscripts/azure/azure-build-binary-linux-pip.yml
#     parameters:
#       name: Linux_pip
#       vmImage: ubuntu-latest
#       platformBuild: false
#  - template: buildscripts/azure/azure-build-binary-windows-pip.yml
#    parameters:
#      name: Windows_pip
#      vmImage: windows-2019
#      platformBuild: false
  # - template: buildscripts/azure/azure-build-binary-macos-x86-pip.yml
  #   parameters:
  #     name: macOS_x86_pip
  #     vmImage: macOS-latest
  #     platformBuild: false

# Note: It is difficult to enforce the exact version of bodo to use for the build, outside of
# modifying the build recipe. Therefore, if we update BodoSQL's build process to require a specific version
# of Bodo, I'm requiring that we update the recipe in buildscripts/bodosql/conda-recipe/meta.yaml,
# and do a mini-release.

- stage: Build_BodoSQL_Binary
  displayName: 'Build BodoSQL Binary'
  dependsOn: Build_Bodo_Binary_Linux_Conda
  jobs:

  # BodoSQL build:
  - template: buildscripts/bodosql/azure/azure-build-binary.yml
    parameters:
      name: BodoSQL_Conda_Build
      vmImage: ubuntu-latest
      CONDA_ENV: build_bodo_sql
      PYTHON_VERSION: 3.10
  - template: buildscripts/bodosql/azure/azure-build-binary-pip.yml
    parameters:
      name: BodoSQL_Pip_Build
      vmImage: ubuntu-latest
      CONDA_ENV: build_bodo_sql
      PYTHON_VERSION: 3.10

  # Bodo tests
- stage: Test_Bodo_Binary
  displayName: 'Test Bodo Binary'
  dependsOn: Build_Bodo_Binary_Linux_Conda
  jobs:

  - template: buildscripts/azure/azure-test-binary-linux-macos.yml
    parameters:
      # Note: name is used later in the buildscripts to determine which version of conda to install
      name: Linux
      vmImage: ubuntu-latest
      useNumbaDev: false
      caching_test: false
      PYTHON_VERSION: 3.10
      matrix:
        BODO_1P_1_OF_9:
          NP: 1
          CONDA_ENV: 'bodo'
          PYTEST_MARKER: bodo_1of9 and not weekly
        BODO_1P_2_OF_9:
          NP: 1
          CONDA_ENV: 'bodo'
          PYTEST_MARKER: bodo_2of9 and not weekly
        BODO_1P_3_OF_9:
          NP: 1
          CONDA_ENV: 'bodo'
          PYTEST_MARKER: bodo_3of9 and not weekly
        BODO_1P_4_OF_9:
          NP: 1
          CONDA_ENV: 'bodo'
          PYTEST_MARKER: bodo_4of9 and not weekly
        BODO_1P_5_OF_9:
          NP: 1
          CONDA_ENV: 'bodo'
          PYTEST_MARKER: bodo_5of9 and not weekly
        BODO_1P_6_OF_9:
          NP: 1
          CONDA_ENV: 'bodo'
          PYTEST_MARKER: bodo_6of9 and not weekly
        BODO_1P_7_OF_9:
          NP: 1
          CONDA_ENV: 'bodo'
          PYTEST_MARKER: bodo_7of9 and not weekly
        BODO_1P_8_OF_9:
          NP: 1
          CONDA_ENV: 'bodo'
          PYTEST_MARKER: bodo_8of9 and not weekly
        BODO_1P_9_OF_9:
          NP: 1
          CONDA_ENV: 'bodo'
          PYTEST_MARKER: bodo_9of9 and not weekly
        BODO_2P_1_OF_15:
          NP: 2
          CONDA_ENV: 'bodo'
          PYTEST_MARKER: bodo_1of15 and not weekly
        BODO_2P_2_OF_15:
          NP: 2
          CONDA_ENV: 'bodo'
          PYTEST_MARKER: bodo_2of15 and not weekly
        BODO_2P_3_OF_15:
          NP: 2
          CONDA_ENV: 'bodo'
          PYTEST_MARKER: bodo_3of15 and not weekly
        BODO_2P_4_OF_15:
          NP: 2
          CONDA_ENV: 'bodo'
          PYTEST_MARKER: bodo_4of15 and not weekly
        BODO_2P_5_OF_15:
          NP: 2
          CONDA_ENV: 'bodo'
          PYTEST_MARKER: bodo_5of15 and not weekly
        BODO_2P_6_OF_15:
          NP: 2
          CONDA_ENV: 'bodo'
          PYTEST_MARKER: bodo_6of15 and not weekly
        BODO_2P_7_OF_15:
          NP: 2
          CONDA_ENV: 'bodo'
          PYTEST_MARKER: bodo_7of15 and not weekly
        BODO_2P_8_OF_15:
          NP: 2
          CONDA_ENV: 'bodo'
          PYTEST_MARKER: bodo_8of15 and not weekly
        BODO_2P_9_OF_15:
          NP: 2
          CONDA_ENV: 'bodo'
          PYTEST_MARKER: bodo_9of15 and not weekly
        BODO_2P_10_OF_15:
          NP: 2
          CONDA_ENV: 'bodo'
          PYTEST_MARKER: bodo_10of15 and not weekly
        BODO_2P_11_OF_15:
          NP: 2
          CONDA_ENV: 'bodo'
          PYTEST_MARKER: bodo_11of15 and not weekly
        BODO_2P_12_OF_15:
          NP: 2
          CONDA_ENV: 'bodo'
          PYTEST_MARKER: bodo_12of15 and not weekly
        BODO_2P_13_OF_15:
          NP: 2
          CONDA_ENV: 'bodo'
          PYTEST_MARKER: bodo_13of15 and not weekly
        BODO_2P_14_OF_15:
          NP: 2
          CONDA_ENV: 'bodo'
          PYTEST_MARKER: bodo_14of15 and not weekly
        BODO_2P_15_OF_15:
          NP: 2
          CONDA_ENV: 'bodo'
          PYTEST_MARKER: bodo_15of15 and not weekly


  - template: buildscripts/azure/azure-test-binary-linux-macos.yml
    parameters:
      # Note: name is used later in the buildscripts to determine which version of conda to install
      name: Linux_cache
      vmImage: ubuntu-latest
      useNumbaDev: false
      caching_test: true
      PYTHON_VERSION: 3.10
      matrix:
        TEST_2P:
          NP: 2
          CONDA_ENV: 'bodo'
          PYTEST_MARKER: ""

  # BodoSQL tests
- stage: Test_BodoSQL_Binary
  displayName: 'Test BodoSQL Binary'
  dependsOn: Build_BodoSQL_Binary
  jobs:
  
  - template: buildscripts/bodosql/azure/azure-test-binary-linux-macos.yml
    parameters:
      # Note: this name is not important, as we explicitly check uname to determine the os
      # for the bodoSQL tests
      name: BODOSQL_Linux
      vmImage: ubuntu-latest
      BODO_CHANNEL_NAME: $(BODO_CHANNEL_NAME)
      CONDA_ENV: run_bodo_sql
      PYTHON_VERSION: 3.10
      matrix:
        BODOSQL_1P_1_OF_6:
          NP: 1
          PYTEST_MARKER: bodosql_1of6 and not weekly
        BODOSQL_1P_2_OF_6:
          NP: 1
          PYTEST_MARKER: bodosql_2of6 and not weekly
        BODOSQL_1P_3_OF_6:
          NP: 1
          PYTEST_MARKER: bodosql_3of6 and not weekly
        BODOSQL_1P_4_OF_6:
          NP: 1
          PYTEST_MARKER: bodosql_4of6 and not weekly
        BODOSQL_1P_5_OF_6:
          NP: 1
          PYTEST_MARKER: bodosql_5of6 and not weekly
        BODOSQL_1P_6_OF_6:
          NP: 1
          PYTEST_MARKER: bodosql_6of6 and not weekly
        BODOSQL_2P_1_OF_11:
          NP: 2
          PYTEST_MARKER: bodosql_1of11 and not weekly
        BODOSQL_2P_2_OF_11:
          NP: 2
          PYTEST_MARKER: bodosql_2of11 and not weekly
        BODOSQL_2P_3_OF_11:
          NP: 2
          PYTEST_MARKER: bodosql_3of11 and not weekly
        BODOSQL_2P_4_OF_11:
          NP: 2
          PYTEST_MARKER: bodosql_4of11 and not weekly
        BODOSQL_2P_5_OF_11:
          NP: 2
          PYTEST_MARKER: bodosql_5of11 and not weekly
        BODOSQL_2P_6_OF_11:
          NP: 2
          PYTEST_MARKER: bodosql_6of11 and not weekly
        BODOSQL_2P_7_OF_11:
          NP: 2
          PYTEST_MARKER: bodosql_7of11 and not weekly
        BODOSQL_2P_8_OF_11:
          NP: 2
          PYTEST_MARKER: bodosql_8of11 and not weekly
        BODOSQL_2P_9_OF_11:
          NP: 2
          PYTEST_MARKER: bodosql_9of11 and not weekly
        BODOSQL_2P_10_OF_11:
          NP: 2
          PYTEST_MARKER: bodosql_10of11 and not weekly
        BODOSQL_2P_11_OF_11:
          NP: 2
          PYTEST_MARKER: bodosql_11of11 and not weekly

  - template: buildscripts/bodosql/azure/azure-test-binary-linux-macos.yml
    parameters:
      # Note: this name is not important, as we explicitly pass CACHE_TEST and
      # check uname to determine the os for the bodoSQL tests
      name: BODOSQL_Linux_cache
      vmImage: ubuntu-latest
      BODO_CHANNEL_NAME: $(BODO_CHANNEL_NAME)
      CONDA_ENV: build_bodo_sql
      PYTHON_VERSION: 3.10
      CACHE_TEST: true
      PYTEST_MARKER: ""
      matrix:
        TEST_2P:
          NP: 2
