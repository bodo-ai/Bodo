
# Azure Pipeline that is triggered weekdays at midnight or when a release is tagged.

trigger:
- refs/tags/*

pr: none

# Currently nightly can take up to ~12 hours to run. 1 AM is a good time to start.
# (Note that this is in UTC time, so 1AM UTC is 8PM EST)
schedules:
- cron: "0 1 * * MON-FRI"
  displayName: 'Weekdays Daily midnight build'
  branches:
    include:
    - develop

parameters:
  - name: PYTEST_MARKER
    displayName: PyTest Marker
    type: string
    default: 'not weekly'

# NOTE: these variables determine artifactory channel to publish Bodo/BodoSQL/Iceberg packages.
# See get_channel.sh
# Originally added through Azure Pipeline UI.
# Azure pipeline UI includes AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY
variables:
  CHECK_LICENSE_EXPIRED: 1
  CHECK_LICENSE_CORE_COUNT: 1
  # Azure Pipelines currently doesn't have a "range" function to count from 1 to total
  # We have to manually add the element and split into an array
  # TODO: Replace with range when available
  bodo_1p_each: "1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22"
  bodo_1p_total: 22
  bodo_2p_each: "1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30"
  bodo_2p_total: 30
  bodosql_1p_each: "1,2,3,4,5,6,7,8,9,10,11,12"
  bodosql_1p_total: 12
  bodosql_2p_each: "1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22"
  bodosql_2p_total: 22

stages:
  # Bodo tests
- stage: Test_Bodo
  displayName: 'Test Bodo'
  dependsOn: []
  jobs:
  - template: buildscripts/bodo/azure/azure-test-conda-linux-macos.yml
    parameters:
      # Note: name is used later in the buildscripts to determine which version of conda to install
      name: Bodo_Tests
      caching_test: false
      spawn_mode_test: false
      matrix:
        ${{ each slice in split(variables.bodo_1p_each, ',') }}:
          ${{ format('BODO_1P_{0}_OF_{1}', slice, variables.bodo_1p_total) }}:
            NP: 1
            PYTEST_MARKER: ${{ format('bodo_{0}of{1} and ({2})', slice, variables.bodo_1p_total, parameters.PYTEST_MARKER) }}
            BODO_TESTING_PIPELINE_HAS_MULTI_RANK_TEST: true

        ${{ each slice in split(variables.bodo_2p_each, ',') }}:
          ${{ format('BODO_2P_{0}_OF_{1}', slice, variables.bodo_2p_total) }}:
            NP: 2
            PYTEST_MARKER: ${{ format('bodo_{0}of{1} and ({2})', slice, variables.bodo_2p_total, parameters.PYTEST_MARKER) }}
            BODO_TESTING_PIPELINE_HAS_MULTI_RANK_TEST: true

  - template: buildscripts/bodo/azure/azure-test-conda-linux-macos.yml
    parameters:
      name: Linux_cache
      caching_test: true
      spawn_mode_test: false
      matrix:
        TEST_2P:
          NP: 2
          PYTEST_MARKER: ""
    
  - template: buildscripts/bodo/azure/azure-test-conda-linux-macos.yml
    parameters:
      name: Bodo_Spawn_mode_tests
      caching_test: false
      spawn_mode_test: true
      matrix:
        TEST_1P:
          NP: 1
          PYTEST_MARKER: "spawn_mode"
        TEST_2P:
          NP: 2
          PYTEST_MARKER: "spawn_mode"


  # BodoSQL tests
- stage: Test_BodoSQL_Streaming
  displayName: 'Test BodoSQL Streaming'
  dependsOn: []
  jobs:

  - template: buildscripts/bodosql/azure/azure-test-conda-linux-macos.yml
    parameters:
      # Note: this name is not important, as we explicitly check uname to determine the os
      # for the bodoSQL tests
      name: BodoSQL_Streaming_Tests
      SPAWN_MODE_TEST: false
      BODO_STREAMING_ENABLED: 1
      matrix:
        ${{ each slice in split(variables.bodosql_1p_each, ',') }}:
          ${{ format('BODOSQL_1P_{0}_OF_{1}', slice, variables.bodosql_1p_total) }}:
            NP: 1
            PYTEST_MARKER: ${{ format('bodosql_{0}of{1} and ({2})', slice, variables.bodosql_1p_total, parameters.PYTEST_MARKER) }}
            BODO_TESTING_PIPELINE_HAS_MULTI_RANK_TEST: true
        ${{ each slice in split(variables.bodosql_2p_each, ',') }}:
          ${{ format('BODOSQL_2P_{0}_OF_{1}', slice, variables.bodosql_2p_total) }}:
            NP: 2
            PYTEST_MARKER: ${{ format('bodosql_{0}of{1} and ({2})', slice, variables.bodosql_2p_total, parameters.PYTEST_MARKER) }}
            BODO_TESTING_PIPELINE_HAS_MULTI_RANK_TEST: true

  - template: buildscripts/bodosql/azure/azure-test-conda-linux-macos.yml
    parameters:
      # Note: this name is not important, as we explicitly pass CACHE_TEST and
      # check uname to determine the os for the bodoSQL tests
      name: BodoSQL_Streaming_Caching_Tests
      CACHE_TEST: true
      SPAWN_MODE_TEST: false
      BODO_STREAMING_ENABLED: 1
      matrix:
        TEST_2P:
          NP: 2
          PYTEST_MARKER: ""
  
  - template: buildscripts/bodosql/azure/azure-test-conda-linux-macos.yml
    parameters:
      # Note: this name is not important, as we explicitly pass CACHE_TEST and
      # check uname to determine the os for the bodoSQL tests
      name: BodoSQL_Streaming_Spawn_mode_tests
      CACHE_TEST: false
      SPAWN_MODE_TEST: true
      BODO_STREAMING_ENABLED: 1
      matrix:
        TEST_1P:
          NP: 1
          PYTEST_MARKER: "spawn_mode"
        TEST_2P:
          NP: 2
          PYTEST_MARKER: "spawn_mode"

# Comment out till OOM issue is resolved.
# Tests already run on PR CI
# Java Unit Tests
# - stage: Test_BodoSQL_Maven
#   displayName: 'Test BodoSQL Maven Unit Tests'
#   dependsOn: []
#   jobs:
#   - template: buildscripts/bodosql/azure/azure-test-mvn-linux.yml
#     parameters:
#       name: BODOSQL_maven_unit_tests
