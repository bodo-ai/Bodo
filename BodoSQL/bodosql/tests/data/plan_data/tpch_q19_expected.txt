PandasAggregate(group=[{}], revenue=[SUM($0)])
  PandasProject($f0=[*($1, -(1, $2))])
    PandasJoin(condition=[AND(OR(AND($10, $11, $3, $4, $12), AND($13, $14, $5, $6, $15), AND($16, $17, $7, $8, $18)), =($9, $0))], joinType=[inner])
      PandasProject(L_PARTKEY=[$1], L_EXTENDEDPRICE=[$5], L_DISCOUNT=[$6], EXPR$0=[>=($4, 1)], EXPR$1=[<=($4, +(1, 10))], EXPR$4=[>=($4, 10)], EXPR$5=[<=($4, +(10, 10))], EXPR$6=[>=($4, 20)], EXPR$7=[<=($4, +(20, 10))])
        PandasFilter(condition=[AND(SEARCH($14, Sarg['AIR':VARCHAR(7) CHARACTER SET "UTF-8", 'AIR REG':VARCHAR(7) CHARACTER SET "UTF-8"]:VARCHAR(7) CHARACTER SET "UTF-8"), =($13, 'DELIVER IN PERSON'))])
          PandasTableScan(table=[[__bodolocal__, lineitem]])
      PandasProject(P_PARTKEY=[$0], EXPR$0=[=($3, 'Brand#12')], EXPR$1=[SEARCH($6, Sarg['SM BOX':VARCHAR(7) CHARACTER SET "UTF-8", 'SM CASE':VARCHAR(7) CHARACTER SET "UTF-8", 'SM PACK':VARCHAR(7) CHARACTER SET "UTF-8", 'SM PKG':VARCHAR(7) CHARACTER SET "UTF-8"]:VARCHAR(7) CHARACTER SET "UTF-8")], EXPR$3=[<=($5, 5)], EXPR$4=[=($3, 'Brand#23')], EXPR$5=[SEARCH($6, Sarg['MED BAG':VARCHAR(8) CHARACTER SET "UTF-8", 'MED BOX':VARCHAR(8) CHARACTER SET "UTF-8", 'MED PACK':VARCHAR(8) CHARACTER SET "UTF-8", 'MED PKG':VARCHAR(8) CHARACTER SET "UTF-8"]:VARCHAR(8) CHARACTER SET "UTF-8")], EXPR$6=[<=($5, 10)], EXPR$7=[=($3, 'Brand#34')], EXPR$8=[SEARCH($6, Sarg['LG BOX':VARCHAR(7) CHARACTER SET "UTF-8", 'LG CASE':VARCHAR(7) CHARACTER SET "UTF-8", 'LG PACK':VARCHAR(7) CHARACTER SET "UTF-8", 'LG PKG':VARCHAR(7) CHARACTER SET "UTF-8"]:VARCHAR(7) CHARACTER SET "UTF-8")], EXPR$9=[<=($5, 15)])
        PandasFilter(condition=[>=($5, 1)])
          PandasTableScan(table=[[__bodolocal__, part]])
