LogicalSort(sort0=[$0], dir0=[ASC-nulls-first])
  LogicalProject(s_name=[$1], s_address=[$2])
    LogicalJoin(condition=[=($0, $3)], joinType=[inner])
      LogicalProject(S_SUPPKEY=[$0], S_NAME=[$1], S_ADDRESS=[$2])
        LogicalJoin(condition=[=($3, $4)], joinType=[inner])
          LogicalProject(S_SUPPKEY=[$0], S_NAME=[$1], S_ADDRESS=[$2], S_NATIONKEY=[$3])
            LogicalFilter(condition=[IS NOT NULL($0)])
              LogicalTableScan(table=[[__bodolocal__, supplier]])
          LogicalProject(N_NATIONKEY=[$0])
            LogicalFilter(condition=[=($1, 'CANADA')])
              LogicalTableScan(table=[[__bodolocal__, nation]])
      LogicalProject(ps_suppkey=[$0])
        LogicalAggregate(group=[{1}])
          LogicalJoin(condition=[AND(=($0, $3), =($1, $4), >($2, $5))], joinType=[inner])
            LogicalProject(PS_PARTKEY=[$0], PS_SUPPKEY=[$1], PS_AVAILQTY=[$2])
              LogicalJoin(condition=[=($0, $3)], joinType=[inner])
                LogicalProject(PS_PARTKEY=[$0], PS_SUPPKEY=[$1], PS_AVAILQTY=[$2])
                  LogicalFilter(condition=[IS NOT NULL($1)])
                    LogicalTableScan(table=[[__bodolocal__, partsupp]])
                LogicalProject(p_partkey=[$0])
                  LogicalAggregate(group=[{0}])
                    LogicalFilter(condition=[LIKE($1, 'forest%')])
                      LogicalTableScan(table=[[__bodolocal__, part]])
            LogicalProject(L_PARTKEY=[$0], L_SUPPKEY=[$1], EXPR$0=[*(0.5:DECIMAL(2, 1), $2)])
              LogicalAggregate(group=[{1, 2}], agg#0=[SUM($4)])
                LogicalFilter(condition=[AND(>=($10, 1994-01-01), <($10, +(1994-01-01, 12:INTERVAL YEAR)), IS NOT NULL($1), IS NOT NULL($2))])
                  LogicalTableScan(table=[[__bodolocal__, lineitem]])
