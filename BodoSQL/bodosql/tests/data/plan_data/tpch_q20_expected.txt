PandasSort(sort0=[$0], dir0=[ASC-nulls-first])
  PandasProject(s_name=[$1], s_address=[$2])
    PandasJoin(condition=[=($0, $3)], joinType=[inner])
      PandasProject(S_SUPPKEY=[$0], S_NAME=[$1], S_ADDRESS=[$2])
        PandasJoin(condition=[=($3, $4)], joinType=[inner])
          PandasProject(S_SUPPKEY=[$0], S_NAME=[$1], S_ADDRESS=[$2], S_NATIONKEY=[$3])
            PandasFilter(condition=[IS NOT NULL($0)])
              PandasTableScan(table=[[__bodolocal__, supplier]])
          PandasProject(N_NATIONKEY=[$0])
            PandasFilter(condition=[=($1, 'CANADA')])
              PandasTableScan(table=[[__bodolocal__, nation]])
      PandasProject(ps_suppkey=[$0])
        PandasAggregate(group=[{1}])
          PandasJoin(condition=[AND(=($0, $3), =($1, $4), >($2, $5))], joinType=[inner])
            PandasProject(PS_PARTKEY=[$0], PS_SUPPKEY=[$1], PS_AVAILQTY=[$2])
              PandasJoin(condition=[=($0, $3)], joinType=[inner])
                PandasProject(PS_PARTKEY=[$0], PS_SUPPKEY=[$1], PS_AVAILQTY=[$2])
                  PandasFilter(condition=[IS NOT NULL($1)])
                    PandasTableScan(table=[[__bodolocal__, partsupp]])
                PandasProject(p_partkey=[$0])
                  PandasAggregate(group=[{0}])
                    PandasFilter(condition=[LIKE($1, 'forest%')])
                      PandasTableScan(table=[[__bodolocal__, part]])
            PandasProject(L_PARTKEY=[$0], L_SUPPKEY=[$1], EXPR$0=[*(0.5:DECIMAL(2, 1), $2)])
              PandasAggregate(group=[{1, 2}], agg#0=[SUM($4)])
                PandasFilter(condition=[AND(>=($10, 1994-01-01), <($10, +(1994-01-01, 12:INTERVAL YEAR)), IS NOT NULL($1), IS NOT NULL($2))])
                  PandasTableScan(table=[[__bodolocal__, lineitem]])
