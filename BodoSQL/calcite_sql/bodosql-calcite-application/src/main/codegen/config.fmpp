# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to you under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

data: {
  # Data declarations for this parser.
  #
  # Default declarations are in default_config.fmpp; if you do not include a
  # declaration ('imports' or 'nonReservedKeywords', for example) in this file,
  # FMPP will use the declaration from default_config.fmpp.
  parser: {
    # Generated parser implementation class package and name
    package: "com.bodosql.calcite.sql.parser",
    class: "SqlBodoParserImpl",

    # List of additional classes and packages to import.
    # Example: "org.apache.calcite.sql.*", "java.util.List".
    imports: [
      "java.util.HashMap"
      "com.bodosql.calcite.application.BodoSQLOperatorTables.DatetimeOperatorTable",
      "com.bodosql.calcite.application.BodoSQLOperatorTables.NumericOperatorTable",
      "com.bodosql.calcite.sql.ddl.SqlCopyIntoTable",
      "com.bodosql.calcite.sql.ddl.SqlCopyIntoLocation",
      "com.bodosql.calcite.sql.ddl.SqlSnowflakeFileFormat",
      "com.bodosql.calcite.sql.ddl.SqlSnowflakeColumnDeclaration",
      "com.bodosql.calcite.sql.ddl.SqlSnowflakeCreateTable",
      "com.bodosql.calcite.sql.ddl.SqlSnowflakeCreateTableAs",
      "com.bodosql.calcite.sql.ddl.SqlSnowflakeCreateTableLike",
      "com.bodosql.calcite.sql.ddl.SqlSnowflakeCreateTableClone",
      "com.bodosql.calcite.sql.ddl.SqlSnowflakeUpdate",
      "com.bodosql.calcite.sql.ddl.SqlDropTable",
      "com.bodosql.calcite.sql.ddl.SqlAlterTable",
      "com.bodosql.calcite.sql.ddl.SqlAlterTableRenameTable",
      "com.bodosql.calcite.sql.ddl.SqlAlterTableSwapTable",
      "com.bodosql.calcite.sql.ddl.SqlAlterTableAddCol",
      "com.bodosql.calcite.sql.ddl.SqlAlterTableRenameCol",
      "com.bodosql.calcite.sql.ddl.SqlAlterTableDropCol",
      "com.bodosql.calcite.sql.ddl.SqlTruncateTable",
      "com.bodosql.calcite.sql.fun.SqlBodoOperatorTable",
      "org.apache.calcite.sql.SqlCreate",
      "org.apache.calcite.sql.SqlDrop",
      "org.apache.calcite.sql.SqlDdl",
      "org.apache.calcite.sql.ddl.SqlDdlNodes",
    ]

    # List of new keywords. Example: "DATABASES", "TABLES". If the keyword is
    # not a reserved keyword, add it to the 'nonReservedKeywords' section.
    keywords: [
      "IF",
      "TEMP",
      "TRANSIENT",
      "VOLATILE",
      "COMPRESSION",
      "RECORD_DELIMITER",
      "FIELD_DELIMITER",
      "PARSE_HEADER",
      "SKIP_HEADER",
      "SKIP_BLANK_LINES",
      "DATE_FORMAT",
      "TIME_FORMAT",
      "TIMESTAMP_FORMAT",
      "BINARY_FORMAT",
      "BINARY_AS_TEXT",
      "ESCAPE_UNENCLOSED_FIELD",
      "TRIM_SPACE",
      "FIELD_OPTIONALLY_ENCLOSED_BY",
      "NULL_IF",
      "ERROR_ON_COLUMN_COUNT_MISMATCH",
      "REPLACE_INVALID_CHARACTERS",
      "EMPTY_FIELD_AS_NULL",
      "SKIP_BYTE_ORDER_MARK",
      "ENABLE_OCTAL",
      "ALLOW_DUPLICATE",
      "STRIP_OUTER_ARRAY",
      "STRIP_NULL_VALUES",
      "IGNORE_UTF8_ERRORS",
      "PRESERVE_SPACE",
      "STRIP_OUTER_ELEMENT",
      "DISABLE_SNOWFLAKE_DATA",
      "DISABLE_AUTO_CONVERT",
      "AUTO",
      "GZIP",
      "BZ2",
      "BROTLI",
      "ZSTD",
      "DEFLATE",
      "RAW_DEFLATE",
      "SNAPPY",
      "FORMAT_NAME",
      "FILE_FORMAT",
      "HEX",
      "BASE64",
      "AUTOINCREMENT",
      "CLONE",
      "CLUSTER",
      "COPY",
      "GRANTS",
    ]

    # List of non-reserved keywords to add;
    # items in this list become non-reserved
    nonReservedKeywordsToAdd: [
        "SWAP",
        "RENAME",
        "IF",
        "VALUES",
        "VALUE",
        "CORR",
        "RANK",
        "LANGUAGE",
        "METHOD",
        "LEAD",
        "USER",
        "TEMP",
        "TRANSIENT",
        "OUT",
        "FILTER",
        "CONDITION",
        "TRANSLATION",
        "POSITION",
        "AUTOINCREMENT",
        "CLONE",
        "CLUSTER",
        "COPY",
        "GRANTS",
        "COMPRESSION",
        "RECORD_DELIMITER",
        "FIELD_DELIMITER",
        "PARSE_HEADER",
        "SKIP_HEADER",
        "SKIP_BLANK_LINES",
        "DATE_FORMAT",
        "TIME_FORMAT",
        "TIMESTAMP_FORMAT",
        "BINARY_FORMAT",
        "BINARY_AS_TEXT",
        "ESCAPE_UNENCLOSED_FIELD",
        "TRIM_SPACE",
        "FIELD_OPTIONALLY_ENCLOSED_BY",
        "NULL_IF",
        "ERROR_ON_COLUMN_COUNT_MISMATCH",
        "REPLACE_INVALID_CHARACTERS",
        "EMPTY_FIELD_AS_NULL",
        "SKIP_BYTE_ORDER_MARK",
        "ENABLE_OCTAL",
        "ALLOW_DUPLICATE",
        "STRIP_OUTER_ARRAY",
        "STRIP_NULL_VALUES",
        "IGNORE_UTF8_ERRORS",
        "PRESERVE_SPACE",
        "STRIP_OUTER_ELEMENT",
        "DISABLE_SNOWFLAKE_DATA",
        "DISABLE_AUTO_CONVERT",
        "AUTO",
        "GZIP",
        "BZ2",
        "BROTLI",
        "ZSTD",
        "DEFLATE",
        "RAW_DEFLATE",
        "SNAPPY"
        "FORMAT_NAME",
        "FILE_FORMAT",
        "HEX",
        "BASE64",
    ]

    # List of additional join types. Each is a method with no arguments.
    # Example: "LeftSemiJoin".
    joinTypes: [
    ]

    # List of methods for parsing builtin function calls.
    # Return type of method implementation should be "SqlNode".
    # Example: "DateFunctionCall()".
    builtinFunctionCallMethods: [
    ]

    # List of methods for parsing extensions to "CREATE [OR REPLACE]" calls.
    # Each must accept arguments "(SqlParserPos pos, boolean replace)".
    # Example: "SqlCreateForeignSchema".
    createStatementParserMethods: [
        "SqlCreateTable",
    ]

    # List of methods for parsing extensions to "DROP" calls.
    # Each must accept arguments "(SqlParserPos pos)".
    # Example: "SqlDropSchema".
    dropStatementParserMethods: [
        "SqlDropTable",
        "SqlDropView"
    ]

    statementParserMethods: [
        "SqlAlterTable()",
        "SqlTruncate()",
        "SqlCopyInto()",
    ]

    # Binary operators tokens.
    # Example: "< INFIX_CAST: \"::\" >".
    binaryOperatorsTokens: [
# Temporary reversions for the Bodo version
# TODO: move these from changes to the core parser back into this module
#      "< INFIX_CAST: \"::\" >",
#      "< NULL_SAFE_EQUAL: \"<=>\" >"
    ]

    # Binary operators initialization.
    # Example: "InfixCast".
    extraBinaryExpressions: [
# Temporary reversions for the Bodo version
# TODO: move these from changes to the core parser into this module
#      "InfixCast",
#      "NullSafeEqual"
    ]

    # List of files in @includes directory that have parser method
    # implementations for parsing custom SQL statements, literals or types
    # given as part of "statementParserMethods", "literalParserMethods" or
    # "dataTypeParserMethods".
    # Example: "parserImpls.ftl".
    implementationFiles: [
      "parserImpls.ftl"
    ]

  },

  default: tdd(../default_config.fmpp)
}

freemarkerLinks: {
  includes: includes/
}
