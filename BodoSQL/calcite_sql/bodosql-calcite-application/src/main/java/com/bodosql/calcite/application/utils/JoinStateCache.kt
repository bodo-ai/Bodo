package com.bodosql.calcite.application.utils

import com.bodosql.calcite.ir.StateVariable

/**
 * Cache of state variables generated by streaming joins.
 */
class JoinStateCache {
    private val joinMap: MutableMap<Int, StateVariable> = HashMap()

    /**
     * Get the state variable for a given streaming join. This does not
     * work with non-streaming, so RuntimeJoinFilters are expected to be disabled.
     * @param joinFilterID The key mapping between join and its filter.
     * @return the state variable for the join or null if we are not streaming.
     */
    fun getStreamingJoinStateVariable(joinFilterID: Int): StateVariable {
        return joinMap[joinFilterID]
            ?: throw IllegalStateException("Join state variable not found for key $joinFilterID")
    }

    /**
     * Set the streaming join state for a join to a state variable.
     * @param joinFilterID The key mapping between join and its filter.
     * @param stateVariable The state variable for the join.
     */
    fun setStreamingJoinStateVariable(
        joinFilterID: Int,
        stateVariable: StateVariable,
    ) {
        joinMap[joinFilterID] = stateVariable
    }
}
