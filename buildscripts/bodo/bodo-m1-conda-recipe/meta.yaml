package:
  name: bodo
  version: {{ BODO_VERSION }}

source:
   path: ../../..

build:
  number: {{ GIT_DESCRIBE_NUMBER|int }}
  script_env:
  - CHECK_LICENSE_EXPIRED
  - CHECK_LICENSE_CORE_COUNT
  - CHECK_LICENSE_PLATFORM
  # Conda-Build deletes .git, so we need to determine the version beforehand
  # and then pass it to setuptools_scm in the build script (setup.py).
  # https://conda-forge.org/docs/maintainer/knowledge_base.html#using-setuptools-scm
  - SETUPTOOLS_SCM_PRETEND_VERSION={{ BODO_VERSION }}
  # Necessary for sccache to find AWS
  - AWS_ACCESS_KEY_ID
  - AWS_SECRET_ACCESS_KEY
  rpaths:
    - lib
    - {{ PREFIX }}/lib
    - {{ SP_DIR }}/pyarrow

build_platform:
  osx_arm64: osx_64
test_on_native_only: true

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - python                                # [build_platform != target_platform]
    - cross-python_{{ target_platform }}    # [build_platform != target_platform]
    - cython <3.0                           # [build_platform != target_platform]
    - cmake                                 # [build_platform != target_platform]
    - ninja                                 # [build_platform != target_platform]
    - numpy >=1.24,<1.27                    # [build_platform != target_platform]
    - libarrow =16.1.0                      # [build_platform != target_platform]
    - pyarrow =16.1.0                       # [build_platform != target_platform]
    - numba 0.60.0
    - sccache

  host:
    - python
    - pip

    # Build Dependencies
    - setuptools >=64
    - cython <3.0
    - setuptools_scm >=8
    - scikit-build-core

    # Compatible with Numba requirements.
    # Resolves build issues on nightly
    - numpy >=1.24,<1.27
    - pandas >=2.1,<2.2
    - fsspec >=2021.09
    - libarrow =16.1.0
    - pyarrow =16.1.0
    - boost-cpp =1.85
    - libcurl ~= 8.0
    - hdf5 >=1.14.3,<1.14.4.0a0=*mpi_mpich_* # [not win]
    - h5py
    - mpich 4.1.2=h* # [not win]
    - msmpi # [win]
    - mpi4py
    - vc # [win]
    - vs2015_runtime # [win]
    - vs2015_win-64 # [win]
    - fftw >=3.3.10,<3.4.0a0=*mpi_mpich_*
    - requests
    - aws-sdk-cpp
    - zstd<=1.5.6

  run:
    - python
    - {{ pin_compatible('numpy') }}
    - pandas >=2.1,<2.2
    - fsspec >=2021.09
    - pyarrow =16.1.0
    - numba =0.60.0
    - mpich 4.1.2=h* # [not win]
    - msmpi # [win]
    - mpi4py
    - vs2015_runtime # [win]
    - vs2015_win-64 # [win]
    - fftw >=3.3.10,<3.4.0a0=*mpi_mpich_*
    - requests
    - aws-sdk-cpp
    - zstd<=1.5.6

  # run constrained will not install these packages when building,
  # but will restrict them if they are present in the conda env.
  # currently matplotlib is an optional dependency, and we only
  # support up to 3.8.2
  run_constrained:
    - matplotlib <= 3.8.2
    - numpy >=1.24,<1.27
    - scikit-learn =1.4.*
    - s3fs >=2022.1.0
    - adlfs >=2022.1.0
    - gcsfs >=2022.1.0
  
test:
  imports:
    - bodo
  source_files:
    - examples/pi.py

about:
  home: https://bodo.ai
  license: Proprietary
  license_file: LICENSE.md
  summary: Python Supercomputing Analytics Platform
