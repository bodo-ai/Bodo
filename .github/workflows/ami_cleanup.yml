name: AWS image cleanup

on:
  workflow_dispatch:
    inputs:
      dryrun:
        description: dryrun. true by default, i.e. only finds the AMIs that would be removed but doesn't deregister them from AWS.
        required: false
        default: 'true'
      regions:
        description: comma-separated list of regions
        required: false
        default: 'us-east-1,us-east-2,us-west-1,us-west-2'

jobs:

  find_and_deregister_images:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout code
        uses: actions/checkout@v1
    
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      
      - name: Install dependencies
        run: |
          set -eo pipefail
          python -m pip install boto3
        
      - name: Find and deregister images
        env:
          REGIONS: ${{ github.event.inputs.regions }}
          DRYRUN: ${{ github.event.inputs.dryrun }}
        run: |
          set -eo pipefail
          cd bodo-platform-image
          DEREGISTER_FLAG="--no-deregister"
          if [[ "$DRYRUN" == "false" ]]; then
            DEREGISTER_FLAG="--deregister"
          fi
          IFS=","
          for region in $REGIONS
          do
            echo "Region: $region"
            python ami_cleanup.py --region $region --output amis_to_remove_$region.json $DEREGISTER_FLAG
          done

      - name: Upload Image Details
        uses: actions/upload-artifact@v2
        with:
          name: removed-amis
          path: bodo-platform-image/amis_to_remove_*.json
